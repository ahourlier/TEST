"""empty message

Revision ID: b8ac6ad1b7a1
Revises: dac74fa98bf8
Create Date: 2022-03-22 14:44:44.852959

"""
from datetime import datetime
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b8ac6ad1b7a1'
down_revision = 'dac74fa98bf8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    now = datetime.today().strftime("%Y-%m-%d %H:%M:%S.%f")
    session.execute(
        "INSERT INTO core.permission (created_at, updated_at, entity, action, role_id) VALUES "
        f"('{now}', '{now}', \'mission_details\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_details\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_details\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_details\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'mission_event\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_event\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_event\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_event\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'mission_import\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_import\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_import\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'mission_import\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'sc\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'sc\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'sc\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'sc\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'sc_thematic\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_thematic\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_thematic\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_thematic\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'sc_task\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_task\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_task\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'sc_task\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'copro\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'copro\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'copro\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'copro\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'copro_thematic\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_thematic\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_thematic\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_thematic\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'copro_task\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_task\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_task\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'copro_task\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'building\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'building\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'building\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'building\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'building_thematic\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'building_thematic\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'building_thematic\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'building_thematic\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'building_task\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'building_task\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'building_task\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'building_task\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'lot\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'lot\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'lot\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'lot\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'lot_thematic\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_thematic\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_thematic\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_thematic\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'lot_task\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_task\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_task\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'lot_task\', \'delete\', \'contributor\'), "

        f"('{now}', '{now}', \'subcontractor\', \'read\', \'contributor\'), "
        f"('{now}', '{now}', \'subcontractor\', \'create\', \'contributor\'), "
        f"('{now}', '{now}', \'subcontractor\', \'update\', \'contributor\'), "
        f"('{now}', '{now}', \'subcontractor\', \'delete\', \'contributor\')"
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute(
        "DELETE FROM core.permission p WHERE p.entity IN "
        "('mission_details', 'mission_event', 'mission_import', "
        "'sc', 'sc_thematic', 'sc_task', "
        "'copro', 'copro_thematic', 'copro_task', "
        "'building', 'building_thematic', 'building_task', "
        "'lot', 'lot_thematic', 'lot_task', "
        "'subcontractor')"

    )
    pass