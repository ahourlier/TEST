"""Initial migration

Revision ID: 879c4cd0883e
Revises: 
Create Date: 2020-04-09 19:08:26.274207

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from app.auth.users.model import UserRole

revision = "879c4cd0883e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agency",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("postal_address", sa.String(length=255), nullable=True),
        sa.Column("email_address", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_agency")),
        schema="core",
    )
    op.create_table(
        "client",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("postal_address", sa.String(length=256), nullable=True),
        sa.Column("title", sa.String(length=20), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("first_name", sa.String(length=50), nullable=True),
        sa.Column("job_function", sa.String(length=50), nullable=True),
        sa.Column("phone_number", sa.String(length=50), nullable=True),
        sa.Column("email_address", sa.String(length=255), nullable=True),
        sa.Column("comment", sa.String(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_client")),
        schema="core",
    )
    op.create_table(
        "document",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("type", sa.String(length=255), nullable=True),
        sa.Column("path", sa.String(length=255), nullable=True),
        sa.Column("tag", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_document")),
        schema="core",
    )
    role = op.create_table(
        "role",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_role")),
        schema="core",
    )

    op.bulk_insert(
        role,
        [
            {
                "name": UserRole.ADMIN,
                "value": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "name": UserRole.MANAGER,
                "value": 2,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "name": UserRole.CONTRIBUTOR,
                "value": 3,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "name": UserRole.CLIENT,
                "value": 4,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
        ],
    )

    op.create_table(
        "antenna",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("postal_address", sa.String(length=255), nullable=True),
        sa.Column("email_address", sa.String(length=255), nullable=False),
        sa.Column("agency_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agency_id"], ["core.agency.id"], name=op.f("fk_antenna_agency_id_agency")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_antenna")),
        schema="core",
    )
    permission = op.create_table(
        "permission",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("entity", sa.String(length=255), nullable=False),
        sa.Column("action", sa.String(length=255), nullable=False),
        sa.Column("role_id", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"], ["core.role.name"], name=op.f("fk_permission_role_id_role")
        ),
        sa.PrimaryKeyConstraint(
            "entity", "action", "role_id", name=op.f("pk_permission")
        ),
        schema="core",
    )

    op.bulk_insert(
        permission,
        [
            {
                "entity": "agency",
                "action": "create",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "agency",
                "action": "delete",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "agency",
                "action": "read",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "agency",
                "action": "update",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "antenna",
                "action": "create",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "antenna",
                "action": "delete",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "antenna",
                "action": "read",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "antenna",
                "action": "update",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "client",
                "action": "create",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "client",
                "action": "delete",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "client",
                "action": "read",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "client",
                "action": "update",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "mission",
                "action": "create",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "mission",
                "action": "delete",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "mission",
                "action": "read",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "mission",
                "action": "update",
                "role_id": UserRole.MANAGER,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "project",
                "action": "create",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "project",
                "action": "delete",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "project",
                "action": "read",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "project",
                "action": "update",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "requester",
                "action": "create",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "requester",
                "action": "delete",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "requester",
                "action": "read",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "requester",
                "action": "update",
                "role_id": UserRole.CONTRIBUTOR,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "user",
                "action": "create",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "user",
                "action": "delete",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "user",
                "action": "read",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "entity": "user",
                "action": "update",
                "role_id": UserRole.ADMIN,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
        ],
    )

    op.create_table(
        "user",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uid", sa.String(length=128), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("title", sa.String(length=10), nullable=True),
        sa.Column("comment", sa.String(length=2083), nullable=True),
        sa.Column("role", sa.String(length=255), nullable=True),
        sa.Column("active", sa.Boolean(create_constraint=False), nullable=False),
        sa.Column("kind", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["role"], ["core.role.name"], name=op.f("fk_user_role_role")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
        sa.UniqueConstraint("uid", name=op.f("uq_user_uid")),
        schema="core",
    )
    op.create_table(
        "mission",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("agency_id", sa.Integer(), nullable=True),
        sa.Column("antenna_id", sa.Integer(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agency_id"], ["core.agency.id"], name=op.f("fk_mission_agency_id_agency")
        ),
        sa.ForeignKeyConstraint(
            ["antenna_id"],
            ["core.antenna.id"],
            name=op.f("fk_mission_antenna_id_antenna"),
        ),
        sa.ForeignKeyConstraint(
            ["client_id"], ["core.client.id"], name=op.f("fk_mission_client_id_client")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_mission")),
        schema="core",
    )
    op.create_table(
        "user_group",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("group_email", sa.String(length=255), nullable=False),
        sa.Column("antenna_id", sa.Integer(), nullable=True),
        sa.Column("agency_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agency_id"],
            ["core.agency.id"],
            name=op.f("fk_user_group_agency_id_agency"),
        ),
        sa.ForeignKeyConstraint(
            ["antenna_id"],
            ["core.antenna.id"],
            name=op.f("fk_user_group_antenna_id_antenna"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["core.user.id"], name=op.f("fk_user_group_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_group")),
        schema="core",
    )
    op.create_table(
        "team",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_position", sa.String(length=255), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("antenna_id", sa.Integer(), nullable=True),
        sa.Column("agency_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agency_id"], ["core.agency.id"], name=op.f("fk_team_agency_id_agency")
        ),
        sa.ForeignKeyConstraint(
            ["antenna_id"], ["core.antenna.id"], name=op.f("fk_team_antenna_id_antenna")
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"], ["core.mission.id"], name=op.f("fk_team_mission_id_mission")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["core.user.id"], name=op.f("fk_team_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_team")),
        schema="core",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("team", schema="core")
    op.drop_table("user_group", schema="core")
    op.drop_table("mission", schema="core")
    op.drop_table("user", schema="core")
    op.drop_table("permission", schema="core")
    op.drop_table("antenna", schema="core")
    op.drop_table("role", schema="core")
    op.drop_table("document", schema="core")
    op.drop_table("client", schema="core")
    op.drop_table("agency", schema="core")
    # ### end Alembic commands ###
