"""empty message

Revision ID: 2cf385fcbfc3
Revises: 2c1bac5afa04
Create Date: 2022-04-22 11:58:43.567312

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2cf385fcbfc3'
down_revision = '2c1bac5afa04'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('caretaker',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_caretaker')),
    schema='core'
    )
    op.create_table('employee',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employee')),
    schema='core'
    )
    op.create_table('fire_safety_personnel',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fire_safety_personnel')),
    schema='core'
    )
    op.create_table('architect',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('qualification', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email_address', sa.String(length=255), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['core.address.id'], name=op.f('fk_architect_address_id_address')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_architect')),
    schema='core'
    )
    op.drop_column('building', 'energy_diagnosis_date', schema='core')
    op.drop_column('building', 'initial_consumption', schema='core')
    op.drop_column('building', 'initial_energy_label', schema='core')
    op.drop_column('combined_structure', 'annual_budget', schema='core')
    op.drop_column('combined_structure', 'rules_exists', schema='core')
    op.drop_column('combined_structure', 'last_general_assemblee_date', schema='core')
    op.drop_column('combined_structure', 'account_closing_date', schema='core')
    op.drop_column('combined_structure', 'total_tantieme', schema='core')
    op.add_column('copro', sa.Column('access_code', sa.Text(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('other_syndic_counsel_member_infos', sa.Text(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('care_taker_id', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('employee_id', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('fire_safety_personnel_id', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('architect_id', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('nb_commercial_lots', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('po_majority', sa.Boolean(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('nb_building', sa.Integer(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('collective_heating', sa.Boolean(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('rcu', sa.Boolean(), nullable=True), schema='core')
    op.add_column('copro', sa.Column('heritage_classification', sa.Boolean(), nullable=True), schema='core')
    op.create_foreign_key(op.f('fk_copro_care_taker_id_caretaker'), 'copro', 'caretaker', ['care_taker_id'], ['id'], source_schema='core', referent_schema='core')
    op.create_foreign_key(op.f('fk_copro_fire_safety_personnel_id_fire_safety_personnel'), 'copro', 'fire_safety_personnel', ['fire_safety_personnel_id'], ['id'], source_schema='core', referent_schema='core')
    op.create_foreign_key(op.f('fk_copro_architect_id_architect'), 'copro', 'architect', ['architect_id'], ['id'], source_schema='core', referent_schema='core')
    op.create_foreign_key(op.f('fk_copro_employee_id_employee'), 'copro', 'employee', ['employee_id'], ['id'], source_schema='core', referent_schema='core')
    op.drop_column('copro', 'closing_accounts_date', schema='core')
    op.drop_column('copro', 'last_assembly_date', schema='core')
    op.drop_column('copro', 'charges_last_year', schema='core')
    op.drop_column('copro', 'percentage_attending_tantiemes', schema='core')
    op.drop_column('copro', 'provisional_budget_last_assembly', schema='core')
    op.drop_column('copro', 'percentage_attending_co_owners', schema='core')
    op.drop_column('copro', 'contract_end_date', schema='core')
    op.drop_column('copro', 'average_charges_per_quarter_per_lot', schema='core')
    op.add_column('lot', sa.Column('rent_hc_per_month', sa.Float(), nullable=True), schema='core')
    op.add_column('lot', sa.Column('rent_cc_per_month', sa.Float(), nullable=True), schema='core')
    op.add_column('lot', sa.Column('outstanding_payements_amount', sa.Float(), nullable=True), schema='core')
    op.drop_column('lot', 'dia_price_m2', schema='core')
    op.drop_column('lot', 'rent_per_month', schema='core')
    op.drop_column('lot', 'dia', schema='core')
    op.drop_column('lot', 'dia_price', schema='core')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lot', sa.Column('dia_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('lot', sa.Column('dia', sa.BOOLEAN(), autoincrement=False, nullable=True), schema='core')
    op.add_column('lot', sa.Column('rent_per_month', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('lot', sa.Column('dia_price_m2', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.drop_column('lot', 'outstanding_payements_amount', schema='core')
    op.drop_column('lot', 'rent_cc_per_month', schema='core')
    op.drop_column('lot', 'rent_hc_per_month', schema='core')
    op.add_column('copro', sa.Column('average_charges_per_quarter_per_lot', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('contract_end_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('percentage_attending_co_owners', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('provisional_budget_last_assembly', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('percentage_attending_tantiemes', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('charges_last_year', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('last_assembly_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.add_column('copro', sa.Column('closing_accounts_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.drop_constraint(op.f('fk_copro_employee_id_employee'), 'copro', schema='core', type_='foreignkey')
    op.drop_constraint(op.f('fk_copro_architect_id_architect'), 'copro', schema='core', type_='foreignkey')
    op.drop_constraint(op.f('fk_copro_fire_safety_personnel_id_fire_safety_personnel'), 'copro', schema='core', type_='foreignkey')
    op.drop_constraint(op.f('fk_copro_care_taker_id_caretaker'), 'copro', schema='core', type_='foreignkey')
    op.drop_column('copro', 'heritage_classification', schema='core')
    op.drop_column('copro', 'rcu', schema='core')
    op.drop_column('copro', 'collective_heating', schema='core')
    op.drop_column('copro', 'nb_building', schema='core')
    op.drop_column('copro', 'po_majority', schema='core')
    op.drop_column('copro', 'nb_commercial_lots', schema='core')
    op.drop_column('copro', 'architect_id', schema='core')
    op.drop_column('copro', 'fire_safety_personnel_id', schema='core')
    op.drop_column('copro', 'employee_id', schema='core')
    op.drop_column('copro', 'care_taker_id', schema='core')
    op.drop_column('copro', 'other_syndic_counsel_member_infos', schema='core')
    op.drop_column('copro', 'access_code', schema='core')
    op.add_column('combined_structure', sa.Column('total_tantieme', sa.BIGINT(), autoincrement=False, nullable=True), schema='core')
    op.add_column('combined_structure', sa.Column('account_closing_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.add_column('combined_structure', sa.Column('last_general_assemblee_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.add_column('combined_structure', sa.Column('rules_exists', sa.BOOLEAN(), autoincrement=False, nullable=True), schema='core')
    op.add_column('combined_structure', sa.Column('annual_budget', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('building', sa.Column('initial_energy_label', sa.VARCHAR(length=255), autoincrement=False, nullable=True), schema='core')
    op.add_column('building', sa.Column('initial_consumption', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True), schema='core')
    op.add_column('building', sa.Column('energy_diagnosis_date', sa.DATE(), autoincrement=False, nullable=True), schema='core')
    op.drop_table('architect', schema='core')
    op.drop_table('fire_safety_personnel', schema='core')
    op.drop_table('employee', schema='core')
    op.drop_table('caretaker', schema='core')
    # ### end Alembic commands ###
